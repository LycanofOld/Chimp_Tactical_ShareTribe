@import "../../styles/customMediaQueries.css";

.inputRoot {
	/* Contain repainting to this component only */
	transform: translate3d(0, 0, 0);

	/* Override react-dates default styles to match input styles */

	& :global(.DateRangePicker) {
		display: block;
	}

	& :global(.DateRangePicker_picker__directionLeft) {
		top: 36px !important;
		left: unset !important;
		width: calc(100% - 48px);
		background-color: var(--marketplaceColor);

		/* !important is added to top because react-dates uses inline style for height */

		/* Similar problem as in issue: https://github.com/airbnb/react-dates/issues/947 */
		box-shadow: var(--boxShadowButton);

		@media (--viewportMedium) {
			/* !important is added to top because react-dates uses inline style for height */

			/* Similar problem as in issue: https://github.com/airbnb/react-dates/issues/947 */
			top: 48px !important;
			left: 0 !important;
			width: 100%;
			min-height: calc(100vh - 252px);
			min-height: auto;
			border-radius: 0 0 6px 6px;
		}
	}

	& :global(.DateInput_input) {
		display: block;
		width: 100%;
		padding: 6px 12px 4px;
		margin: 0;
		font-family: var(--fontFamily);
		font-size: 16px;
		font-weight: var(--fontWeightMedium);
		line-height: 24px;
		letter-spacing: -0.1px;
		background-color: #fff;
		border: 1px solid #d8dce6;
		border-radius: 6px;
		outline: none;
		transition: all 0.1s ease-in-out;

		&:focus {
			border-color: #80bdff;
			border-radius: 6px 6px 0 0;
			box-shadow: 0 0 0 0.2rem rgb(0 123 255 / 25%);
			transition: all ease-in-out 100ms;
		}

		@media (--viewportMedium) {
			padding: 7px 16px;
			line-height: 32px;
		}
	}

	& :global(.DateRangePickerInput) {
		display: flex;
		justify-content: space-between;
		width: 100%;
		background: none;
		border: none;
	}

	& :global(.DayPicker__horizontal) {
		margin: 0 auto;
		background-color: var(--marketplaceColor);
		box-shadow: none;
	}

	& :global(.DayPickerNavigation__horizontal) {
		position: relative;
		width: 100%;
	}

	& :global(.DayPickerNavigation_button__horizontal) {
		position: absolute;
		top: 16px;
		display: inline;
		padding: 6px 9px;
		cursor: pointer;

		&:first-of-type {
			left: 24px;
		}

		&:last-of-type {
			right: 24px;
		}
	}

	& :global(.DayPickerNavigation_button) {
		color: var(--colorWhite);
		border: 0;
	}

	& :global(.CalendarMonth),
	& :global(.CalendarMonthGrid) {
		background-color: transparent;
	}

	& :global(.DateInput) {
		display: block;
		width: 100%;
	}

	& :global(.DayPicker_weekHeader) {
		top: 57px;
		color: var(--colorWhite);
	}

	& :global(.DayPicker_weekHeader_li) {
		font-weight: var(--fontWeightRegular);
	}

	& :global(.DayPicker__withBorder) {
		border-radius: 0;
	}

	& :global(.CalendarMonth_caption) {
		margin: 1px 0 14px;
		font-size: 21px;
		font-weight: var(--fontWeightRegular);
		line-height: 24px;
		color: var(--colorWhite);

		@media (--viewportMedium) {
			margin-top: 0;
			margin-bottom: 0;
			line-height: 32px;
		}
	}

	& :global(.CalendarDay__default) {
		width: 100%;
		height: 100%;
		padding: 0;
		background-color: var(--marketplaceColor);
		border: 0;
	}

	& :global(.CalendarDay) {
		margin-top: 0;
		margin-bottom: 0;
		font-size: 15px;
		font-weight: var(--fontWeightMedium);
		line-height: 24px;
		color: var(--colorWhite);
		letter-spacing: 0;
		border: 0;

		@media (--viewportMedium) {
			margin-top: 0;
			margin-bottom: 0;
			font-weight: var(--fontWeightMedium);
		}
	}

	/* Add an underline for '.renderedDay' */
	& :global(.CalendarDay__today .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-image: url("data:image/svg+xml;utf8,<svg width='14' height='2' viewBox='0 0 14 2' xmlns='http://www.w3.org/2000/svg'><path d='M0 0h14v2H0z' fill='%23FFF' fill-rule='evenodd'/></svg>");
		background-position: center 34px;
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__hovered_span),
	& :global(.CalendarDay__selected_span) {
		background-color: transparent;
		background-image: transparent;
	}

	& :global(.CalendarDay__hovered_span .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-color: var(--DateRangeInput_hoveredOverlayColor);
	}

	& :global(.CalendarDay__selected_span .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-color: var(--colorSuccess);
		transition: all 0.2s ease-out;
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__selected_start) {
		background-color: transparent;
		background-image: none;
	}

	& :global(.CalendarDay__selected_start .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-color: var(--colorSuccess);
		border-top-left-radius: calc(var(--DateRangeInput_selectionHeight) / 2);
		border-bottom-left-radius: calc(var(--DateRangeInput_selectionHeight) / 2);
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__after-hovered_start) {
		background-color: transparent;
	}

	& :global(.CalendarDay__after-hovered_start .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-color: var(--DateRangeInput_hoveredOverlayColor);
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__selected_end) {
		background-color: transparent;
	}

	& :global(.CalendarDay__selected_end .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		color: var(--colorWhite);
		background-color: var(--colorSuccess);
		border-top-right-radius: calc(var(--DateRangeInput_selectionHeight) / 2);
		border-bottom-right-radius: calc(var(--DateRangeInput_selectionHeight) / 2);
	}

	& :global(.CalendarDay:hover .renderedDay) {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: var(--DateRangeInput_selectionHeight);
		background-color: var(--DateRangeInput_hoveredOverlayColor);
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__blocked_out_of_range),
	& :global(.CalendarDay__blocked_out_of_range:active),
	& :global(.CalendarDay__blocked_out_of_range:hover) {
		color: var(--marketplaceColorDark);
		background-color: transparent;
		border: 0;
	}

	/* Remove default bg-color and use our extra span instead '.renderedDay' */
	& :global(.CalendarDay__blocked_calendar),
	& :global(.CalendarDay__blocked_calendar:active),
	& :global(.CalendarDay__blocked_calendar:hover) {
		color: var(--marketplaceColorDark);
		background-color: transparent;
		border: 0;
	}

	& :global(.CalendarDay__blocked_out_of_range .CalendarDay__blocked_calendar .renderedDay) {
		background-color: transparent;
	}

	& :global(.DateInput_fang) {
		display: none;
	}

	& :global(.CalendarMonth_caption) {
		text-transform: capitalize;
	}

	& :global(.DateInput_input__disabled) {
		font-style: normal;
	}
}

/**
 * Mobile margins mean that labels, inputs (incl separate borders) get margins,
 * but calendar popup doesn't.
 */
.withMobileMargins {
	& :global(.DateRangePickerInput) {
		width: calc(100vw - 48px);
		margin: 0 24px 3px;

		@media (--viewportMedium) {
			width: 100%;
			margin: 0;
		}
	}

	/* Create gutter between inputs */
	& :global(.DateInput) {
		width: calc(50% - 6px);
		background: none;

		@media (--viewportMedium) {
			width: calc(50% - 6px);
		}
	}

	& :global(.DateInput:first-of-type) {
		margin-right: 12px;

		@media (--viewportMedium) {
			margin-right: 0;
		}
	}
}

.arrowIcon {
	fill: var(--colorWhite);
	stroke: var(--colorWhite);
}
