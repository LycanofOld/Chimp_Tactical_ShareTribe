@import "../../styles/customMediaQueries.css";

/* Can be given to Topbar when a modal is opened
 * so that the Topbar is not rendered on top of it. */
.topbarBehindModal {
	z-index: initial;
}

.topbar {
	position: relative;

	/* Top Bar's drop shadow should always be visible */
	z-index: var(--zIndexTopbar);
	width: 100%;

	@media (--viewportMedium) {
		position: fixed;
		top: 0;
		left: 0;

		/* We need to raise Topbar above .container */
		z-index: var(--zIndexTopbar);
	}
}

.container {
	display: flex;
	flex-grow: 1;

	/* Layout */
	width: 100%;

	@media (--viewportMedium) {
		position: relative;
		min-height: calc(100vh - var(--topbarHeightDesktop));
		padding-top: var(--topbarHeightDesktop);
	}
}

/* Container for side and content */
.layoutWrapperContainer {
	composes: container;

	/* When side nav is shown as a column, Topbar's box-shadow should be visible */
	z-index: calc(var(--zIndexTopbar) - 1);

	/* This container uses flexbox layout */
	display: flex;
	flex-direction: column;

	/* parent aka root is flexbox, this container takes all available space */
	flex-shrink: 0;
	width: 100%;

	@media (--viewportMedium) {
		flex-direction: row;
		justify-content: center;
	}
}

.layoutWrapperFilterColumn {
	display: none;

	@media (--viewportMedium) {
		/* Layout */
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		padding: 24px 0 0 24px;
	}

	@media (--viewportLarge) {
		flex-direction: column;
		justify-content: flex-start;

		/* Layout */
		padding: 40px 0 0 36px;
		background-color: transparent;
		border: none;
		box-shadow: none;
	}

	@media (width >= 1440px) {
		padding: 40px 0 0 calc((100vw - 1368px) / 2);
	}

	@media (--viewportXLarge) {
		padding: 40px 0 0 calc((100vw - 1800px) / 2);
	}
}

.filterColumnContent {
	width: 210px;
	padding: 8px 24px 0 0;

	@media (--viewportMedium) {
		padding: 8px 24px 24px 0;
	}

	@media (--viewportLarge) {
		width: 240px;
		padding: 8px 36px 24px 0;
	}

	@media (width >= 1440px) {
		padding: 8px 60px 24px 0;
	}
}

.filter:first-child {
	padding-top: 0;
}

.resetAllButton {
	composes: h5 from global;

	/* Layout */
	display: inline;
	padding: 0;
	margin: 17px 0 0;
	font-weight: var(--fontWeightMedium);
	color: var(--colorGrey300);
	text-align: left;
	cursor: pointer;
	border: none;

	/* Override button styles */
	outline: none;

	&:focus,
	&:hover {
		color: var(--colorGrey700);
	}

	@media (--viewportMedium) {
		padding: 3px 0 5px;
		margin: 24px 0 0;
	}
}

.layoutWrapperMain {
	display: flex;
	flex-direction: column;

	/* Expand to the full remaining width of the viewport */
	flex-grow: 1;
	padding: 0 24px;

	@media (--viewportMedium) {
		/**
     * Calculate right padding to match Footer right border
     * and left padding together with border should be 60px.
     */
		padding: 24px 24px 0;
		background-color: var(--colorWhite);
		border-left: 1px solid var(--colorGrey100);
	}

	@media (--viewportLarge) {
		/**
     * Calculate right padding to match Footer right border
     * and left padding together with border should be 60px.
     */
		padding: 40px 36px 0;
	}

	@media (width >= 1440px) {
		padding: 40px calc((100vw - 1368px) / 2) 0 59px;
	}

	@media (--viewportXLarge) {
		padding: 40px calc((100vw - 1800px) / 2) 0 59px;
	}
}

.searchResultContainer {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	padding: 2px 0 0;

	@media (--viewportMedium) {
		/**
     * .container is using flexbox,
     * This specifies that searchResultContainer is taking 60% from the viewport width
     */
		flex-basis: 50%;
		padding: 0;
	}

	@media (--viewportLarge) {
		flex-basis: 62.5%;
	}
}

.error {
	color: var(--colorFail);
}

.searchString {
	/* Search string should not break on white spaces - i.e. line-break should happen before. */
	white-space: nowrap;
}

.mainPanel {
	display: none;

	@media (--viewportMedium) {
		display: flex;
	}
}

.mainPanelMapVariant {
	composes: mainpanel;

	@media (--viewportMedium) {
		padding: 18px 24px 0;
		margin-bottom: 21px;
	}

	@media (--viewportLarge) {
		padding: 23px 36px 0;
	}
}

.searchFiltersMobileMap {
	padding: 16px 24px;

	@media (--viewportMedium) {
		display: none;
	}
}

.searchFiltersMobileList {
	padding: 16px 0;

	@media (--viewportMedium) {
		display: none;
	}
}

.searchFiltersPanel {
	display: flex;
	flex-grow: 1;
	padding: 0 24px 24px;

	@media (--viewportLarge) {
		padding: 0 36px 36px;
	}
}

.listings {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
}

.listingsForGridVariant {
	composes: listings;
}

.listingsForMapVariant {
	composes: listings;
	padding: 0 24px;

	@media (--viewportLarge) {
		padding: 0 36px;
	}
}

.newSearchInProgress {
	opacity: 0.1;
}

.searchListingsPanel {
	flex-grow: 1;
}

.mapPanel {
	@media (--viewportMedium) {
		/* Own layout settings */
		display: flex;

		/**
     * .container is using flexbox,
     * This specifies that mapPanel is taking 34% from the viewport width
     */
		flex-basis: 50%;
		height: 100%;
	}

	@media (--viewportLarge) {
		flex-basis: 37.5%;
	}
}

.mapWrapper {
	width: 100%;
	height: 100%;
}

.map {
	width: 100vw;
	height: 100vh;

	@media (--viewportMedium) {
		/* Map is fixed so that it doesn't scroll along search results */
		position: fixed;
		top: var(--topbarHeightDesktop);
		right: 0;

		/* Fixed content needs width relative to viewport */
		width: 50vw;
		height: calc(100vh - var(--topbarHeightDesktop));
	}

	@media (--viewportLarge) {
		width: 37.5vw;
	}
}
