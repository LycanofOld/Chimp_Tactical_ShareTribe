@import "../../../styles/customMediaQueries.css";

.root {
	/* Size from content */
	position: relative;
	width: auto;
	height: auto;
	padding: 0;
	border: 0;

	&:hover {
		& .details,
		& .caret {
			color: var(--colorWhite);
			cursor: pointer;

			/* Same as active */
			background-color: var(--marketplaceColor);
			border-color: var(--marketplaceColor);
			box-shadow: var(--boxShadowPopup);
		}
	}
}

.details {
	/* Font */
	composes: p from global;

	/**
   * Since caret is absolutely positioned,
   * label must have relative to be included to the same rendering layer
   */
	position: relative;
	padding: 6px 14px;
	margin-top: 0;
	margin-bottom: 0;
	font-weight: var(--fontWeightBold);
	color: var(--colorGrey700);

	/* Coloring */
	background-color: var(--colorWhite);
	border-color: var(--colorGrey100);
	border-style: solid;
	border-width: 1px;

	/* Borders */
	border-radius: 19px;
	box-shadow: var(--boxShadowPopupLight);
	transition: var(--transitionStyleButton);

	/* Overwrite dimensions from font styles */
	@media (--viewportMedium) {
		margin-top: 0;
		margin-bottom: 0;
	}
}

.detailsActive {
	color: var(--colorWhite);

	/* Same as hover */
	background-color: var(--marketplaceColor);
	border-color: var(--marketplaceColor);
	box-shadow: var(--boxShadowPopup);
}

.caretShadow {
	position: absolute;
	bottom: -3px;
	left: 50%;

	/* Caret / arrow dimensions and position */
	width: 6px;
	height: 6px;
	margin-left: -3px;

	/* Caret should have same box-shadow as label */
	box-shadow: var(--boxShadowPopupLight);
	transform: rotate(45deg);
}

.caret {
	position: absolute;
	bottom: -3px;
	left: 50%;

	/* Caret / arrow dimensions and position */
	width: 6px;
	height: 6px;
	margin-left: -3px;

	/* Caret should have same bg-color as label */
	background-color: var(--colorWhite);
	transition: var(--transitionStyleButton);
	transform: rotate(45deg);
}

.caretActive {
	/* Same as hover */
	background-color: var(--marketplaceColor);
	border-color: var(--marketplaceColor);
}
